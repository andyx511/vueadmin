{"remainingRequest":"E:\\VUE\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js!E:\\VUE\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\VUE\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\VUE\\vue-element-admin\\src\\layout\\components\\TagsView\\ScrollPane.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\VUE\\vue-element-admin\\src\\layout\\components\\TagsView\\ScrollPane.vue","mtime":1566914132236},{"path":"E:\\VUE\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\VUE\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\VUE\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\VUE\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.array.find-index\");\n\n//\n//\n//\n//\n//\n//\nvar tagAndTagSpacing = 4; // tagAndTagSpacing\n\nvar _default = {\n  name: 'ScrollPane',\n  data: function data() {\n    return {\n      left: 0\n    };\n  },\n  computed: {\n    scrollWrapper: function scrollWrapper() {\n      return this.$refs.scrollContainer.$refs.wrap;\n    }\n  },\n  methods: {\n    handleScroll: function handleScroll(e) {\n      var eventDelta = e.wheelDelta || -e.deltaY * 40;\n      var $scrollWrapper = this.scrollWrapper;\n      $scrollWrapper.scrollLeft = $scrollWrapper.scrollLeft + eventDelta / 4;\n    },\n    moveToTarget: function moveToTarget(currentTag) {\n      var $container = this.$refs.scrollContainer.$el;\n      var $containerWidth = $container.offsetWidth;\n      var $scrollWrapper = this.scrollWrapper;\n      var tagList = this.$parent.$refs.tag;\n      var firstTag = null;\n      var lastTag = null; // find first tag and last tag\n\n      if (tagList.length > 0) {\n        firstTag = tagList[0];\n        lastTag = tagList[tagList.length - 1];\n      }\n\n      if (firstTag === currentTag) {\n        $scrollWrapper.scrollLeft = 0;\n      } else if (lastTag === currentTag) {\n        $scrollWrapper.scrollLeft = $scrollWrapper.scrollWidth - $containerWidth;\n      } else {\n        // find preTag and nextTag\n        var currentIndex = tagList.findIndex(function (item) {\n          return item === currentTag;\n        });\n        var prevTag = tagList[currentIndex - 1];\n        var nextTag = tagList[currentIndex + 1]; // the tag's offsetLeft after of nextTag\n\n        var afterNextTagOffsetLeft = nextTag.$el.offsetLeft + nextTag.$el.offsetWidth + tagAndTagSpacing; // the tag's offsetLeft before of prevTag\n\n        var beforePrevTagOffsetLeft = prevTag.$el.offsetLeft - tagAndTagSpacing;\n\n        if (afterNextTagOffsetLeft > $scrollWrapper.scrollLeft + $containerWidth) {\n          $scrollWrapper.scrollLeft = afterNextTagOffsetLeft - $containerWidth;\n        } else if (beforePrevTagOffsetLeft < $scrollWrapper.scrollLeft) {\n          $scrollWrapper.scrollLeft = beforePrevTagOffsetLeft;\n        }\n      }\n    }\n  }\n};\nexports.default = _default;",null]}