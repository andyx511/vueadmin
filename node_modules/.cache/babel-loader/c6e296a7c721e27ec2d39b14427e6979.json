{"remainingRequest":"E:\\VUE\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js!E:\\VUE\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\VUE\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\VUE\\vue-element-admin\\src\\views\\table\\drag-table.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\VUE\\vue-element-admin\\src\\views\\table\\drag-table.vue","mtime":1566914132337},{"path":"E:\\VUE\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\VUE\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\VUE\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\VUE\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"E:\\\\VUE\\\\vue-element-admin\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"E:\\\\VUE\\\\vue-element-admin\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/asyncToGenerator\"));\n\nvar _article = require(\"@/api/article\");\n\nvar _sortablejs = _interopRequireDefault(require(\"sortablejs\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'DragTable',\n  filters: {\n    statusFilter: function statusFilter(status) {\n      var statusMap = {\n        published: 'success',\n        draft: 'info',\n        deleted: 'danger'\n      };\n      return statusMap[status];\n    }\n  },\n  data: function data() {\n    return {\n      list: null,\n      total: null,\n      listLoading: true,\n      listQuery: {\n        page: 1,\n        limit: 10\n      },\n      sortable: null,\n      oldList: [],\n      newList: []\n    };\n  },\n  created: function created() {\n    this.getList();\n  },\n  methods: {\n    getList: function () {\n      var _getList = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        var _ref, data;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.listLoading = true;\n                _context.next = 3;\n                return (0, _article.fetchList)(this.listQuery);\n\n              case 3:\n                _ref = _context.sent;\n                data = _ref.data;\n                this.list = data.items;\n                this.total = data.total;\n                this.listLoading = false;\n                this.oldList = this.list.map(function (v) {\n                  return v.id;\n                });\n                this.newList = this.oldList.slice();\n                this.$nextTick(function () {\n                  _this.setSort();\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getList() {\n        return _getList.apply(this, arguments);\n      }\n\n      return getList;\n    }(),\n    setSort: function setSort() {\n      var _this2 = this;\n\n      var el = this.$refs.dragTable.$el.querySelectorAll('.el-table__body-wrapper > table > tbody')[0];\n      this.sortable = _sortablejs.default.create(el, {\n        ghostClass: 'sortable-ghost',\n        // Class name for the drop placeholder,\n        setData: function setData(dataTransfer) {\n          // to avoid Firefox bug\n          // Detail see : https://github.com/RubaXa/Sortable/issues/1012\n          dataTransfer.setData('Text', '');\n        },\n        onEnd: function onEnd(evt) {\n          var targetRow = _this2.list.splice(evt.oldIndex, 1)[0];\n\n          _this2.list.splice(evt.newIndex, 0, targetRow); // for show the changes, you can delete in you code\n\n\n          var tempIndex = _this2.newList.splice(evt.oldIndex, 1)[0];\n\n          _this2.newList.splice(evt.newIndex, 0, tempIndex);\n        }\n      });\n    }\n  }\n};\nexports.default = _default;",null]}