{"remainingRequest":"E:\\VUE\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js!E:\\VUE\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\VUE\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\VUE\\vue-element-admin\\src\\components\\SvgIcon\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\VUE\\vue-element-admin\\src\\components\\SvgIcon\\index.vue","mtime":1566914132178},{"path":"E:\\VUE\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\VUE\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\VUE\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\VUE\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = require(\"@/utils/validate\");\n\n//\n//\n//\n//\n//\n//\n//\n// doc: https://panjiachen.github.io/vue-element-admin-site/feature/component/svg-icon.html#usage\nvar _default = {\n  name: 'SvgIcon',\n  props: {\n    iconClass: {\n      type: String,\n      required: true\n    },\n    className: {\n      type: String,\n      default: ''\n    }\n  },\n  computed: {\n    isExternal: function isExternal() {\n      return (0, _validate.isExternal)(this.iconClass);\n    },\n    iconName: function iconName() {\n      return \"#icon-\".concat(this.iconClass);\n    },\n    svgClass: function svgClass() {\n      if (this.className) {\n        return 'svg-icon ' + this.className;\n      } else {\n        return 'svg-icon';\n      }\n    },\n    styleExternalIcon: function styleExternalIcon() {\n      return {\n        mask: \"url(\".concat(this.iconClass, \") no-repeat 50% 50%\"),\n        '-webkit-mask': \"url(\".concat(this.iconClass, \") no-repeat 50% 50%\")\n      };\n    }\n  }\n};\nexports.default = _default;",null]}