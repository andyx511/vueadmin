{"remainingRequest":"E:\\VUE\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js!E:\\VUE\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\VUE\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\VUE\\vue-element-admin\\src\\views\\dashboard\\admin\\components\\TodoList\\Todo.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\VUE\\vue-element-admin\\src\\views\\dashboard\\admin\\components\\TodoList\\Todo.vue","mtime":1566914132287},{"path":"E:\\VUE\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\VUE\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\VUE\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\VUE\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default2 = {\n  name: 'Todo',\n  directives: {\n    focus: function focus(el, _ref, _ref2) {\n      var value = _ref.value;\n      var context = _ref2.context;\n\n      if (value) {\n        context.$nextTick(function () {\n          el.focus();\n        });\n      }\n    }\n  },\n  props: {\n    todo: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  data: function data() {\n    return {\n      editing: false\n    };\n  },\n  methods: {\n    deleteTodo: function deleteTodo(todo) {\n      this.$emit('deleteTodo', todo);\n    },\n    editTodo: function editTodo(_ref3) {\n      var todo = _ref3.todo,\n          value = _ref3.value;\n      this.$emit('editTodo', {\n        todo: todo,\n        value: value\n      });\n    },\n    toggleTodo: function toggleTodo(todo) {\n      this.$emit('toggleTodo', todo);\n    },\n    doneEdit: function doneEdit(e) {\n      var value = e.target.value.trim();\n      var todo = this.todo;\n\n      if (!value) {\n        this.deleteTodo({\n          todo: todo\n        });\n      } else if (this.editing) {\n        this.editTodo({\n          todo: todo,\n          value: value\n        });\n        this.editing = false;\n      }\n    },\n    cancelEdit: function cancelEdit(e) {\n      e.target.value = this.todo.text;\n      this.editing = false;\n    }\n  }\n};\nexports.default = _default2;",null]}