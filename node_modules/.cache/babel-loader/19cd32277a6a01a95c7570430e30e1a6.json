{"remainingRequest":"E:\\VUE\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js!E:\\VUE\\vue-element-admin\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\VUE\\vue-element-admin\\src\\router\\modules\\nested.js","dependencies":[{"path":"E:\\VUE\\vue-element-admin\\src\\router\\modules\\nested.js","mtime":1566914132244},{"path":"E:\\VUE\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\VUE\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\VUE\\vue-element-admin\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"E:\\\\VUE\\\\vue-element-admin\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _interopRequireWildcard2 = _interopRequireDefault(require(\"E:\\\\VUE\\\\vue-element-admin\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/interopRequireWildcard\"));\n\nvar _layout = _interopRequireDefault(require(\"@/layout\"));\n\n/** When your routing table is too long, you can split it into small modules **/\nvar nestedRouter = {\n  path: '/nested',\n  component: _layout.default,\n  redirect: '/nested/menu1/menu1-1',\n  name: 'Nested',\n  meta: {\n    title: 'Nested Routes',\n    icon: 'nested'\n  },\n  children: [{\n    path: 'menu1',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/nested/menu1/index'));\n      });\n    },\n    // Parent router-view\n    name: 'Menu1',\n    meta: {\n      title: 'Menu 1'\n    },\n    redirect: '/nested/menu1/menu1-1',\n    children: [{\n      path: 'menu1-1',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/nested/menu1/menu1-1'));\n        });\n      },\n      name: 'Menu1-1',\n      meta: {\n        title: 'Menu 1-1'\n      }\n    }, {\n      path: 'menu1-2',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/nested/menu1/menu1-2'));\n        });\n      },\n      name: 'Menu1-2',\n      redirect: '/nested/menu1/menu1-2/menu1-2-1',\n      meta: {\n        title: 'Menu 1-2'\n      },\n      children: [{\n        path: 'menu1-2-1',\n        component: function component() {\n          return Promise.resolve().then(function () {\n            return (0, _interopRequireWildcard2.default)(require('@/views/nested/menu1/menu1-2/menu1-2-1'));\n          });\n        },\n        name: 'Menu1-2-1',\n        meta: {\n          title: 'Menu 1-2-1'\n        }\n      }, {\n        path: 'menu1-2-2',\n        component: function component() {\n          return Promise.resolve().then(function () {\n            return (0, _interopRequireWildcard2.default)(require('@/views/nested/menu1/menu1-2/menu1-2-2'));\n          });\n        },\n        name: 'Menu1-2-2',\n        meta: {\n          title: 'Menu 1-2-2'\n        }\n      }]\n    }, {\n      path: 'menu1-3',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/nested/menu1/menu1-3'));\n        });\n      },\n      name: 'Menu1-3',\n      meta: {\n        title: 'Menu 1-3'\n      }\n    }]\n  }, {\n    path: 'menu2',\n    name: 'Menu2',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/nested/menu2/index'));\n      });\n    },\n    meta: {\n      title: 'Menu 2'\n    }\n  }]\n};\nvar _default = nestedRouter;\nexports.default = _default;",null]}