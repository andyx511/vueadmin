{"remainingRequest":"E:\\VUE\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js!E:\\VUE\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\VUE\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\VUE\\vue-element-admin\\src\\views\\table\\complex-table.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\VUE\\vue-element-admin\\src\\views\\table\\complex-table.vue","mtime":1566914132336},{"path":"E:\\VUE\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\VUE\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\VUE\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\VUE\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"E:\\\\VUE\\\\vue-element-admin\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.array.sort\");\n\nvar _interopRequireWildcard2 = _interopRequireDefault(require(\"E:\\\\VUE\\\\vue-element-admin\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/interopRequireWildcard\"));\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _article = require(\"@/api/article\");\n\nvar _waves = _interopRequireDefault(require(\"@/directive/waves\"));\n\nvar _utils = require(\"@/utils\");\n\nvar _Pagination = _interopRequireDefault(require(\"@/components/Pagination\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// waves directive\n// secondary package based on el-pagination\nvar calendarTypeOptions = [{\n  key: 'CN',\n  display_name: 'China'\n}, {\n  key: 'US',\n  display_name: 'USA'\n}, {\n  key: 'JP',\n  display_name: 'Japan'\n}, {\n  key: 'EU',\n  display_name: 'Eurozone'\n}]; // arr to obj, such as { CN : \"China\", US : \"USA\" }\n\nvar calendarTypeKeyValue = calendarTypeOptions.reduce(function (acc, cur) {\n  acc[cur.key] = cur.display_name;\n  return acc;\n}, {});\nvar _default = {\n  name: 'ComplexTable',\n  components: {\n    Pagination: _Pagination.default\n  },\n  directives: {\n    waves: _waves.default\n  },\n  filters: {\n    statusFilter: function statusFilter(status) {\n      var statusMap = {\n        published: 'success',\n        draft: 'info',\n        deleted: 'danger'\n      };\n      return statusMap[status];\n    },\n    typeFilter: function typeFilter(type) {\n      return calendarTypeKeyValue[type];\n    }\n  },\n  data: function data() {\n    return {\n      tableKey: 0,\n      list: null,\n      total: 0,\n      listLoading: true,\n      listQuery: {\n        page: 1,\n        limit: 20,\n        importance: undefined,\n        title: undefined,\n        type: undefined,\n        sort: '+id'\n      },\n      importanceOptions: [1, 2, 3],\n      calendarTypeOptions: calendarTypeOptions,\n      sortOptions: [{\n        label: 'ID Ascending',\n        key: '+id'\n      }, {\n        label: 'ID Descending',\n        key: '-id'\n      }],\n      statusOptions: ['published', 'draft', 'deleted'],\n      showReviewer: false,\n      temp: {\n        id: undefined,\n        importance: 1,\n        remark: '',\n        timestamp: new Date(),\n        title: '',\n        type: '',\n        status: 'published'\n      },\n      dialogFormVisible: false,\n      dialogStatus: '',\n      textMap: {\n        update: 'Edit',\n        create: 'Create'\n      },\n      dialogPvVisible: false,\n      pvData: [],\n      rules: {\n        type: [{\n          required: true,\n          message: 'type is required',\n          trigger: 'change'\n        }],\n        timestamp: [{\n          type: 'date',\n          required: true,\n          message: 'timestamp is required',\n          trigger: 'change'\n        }],\n        title: [{\n          required: true,\n          message: 'title is required',\n          trigger: 'blur'\n        }]\n      },\n      downloadLoading: false\n    };\n  },\n  created: function created() {\n    this.getList();\n  },\n  methods: {\n    getList: function getList() {\n      var _this = this;\n\n      this.listLoading = true;\n      (0, _article.fetchList)(this.listQuery).then(function (response) {\n        _this.list = response.data.items;\n        _this.total = response.data.total; // Just to simulate the time of the request\n\n        setTimeout(function () {\n          _this.listLoading = false;\n        }, 1.5 * 1000);\n      });\n    },\n    handleFilter: function handleFilter() {\n      this.listQuery.page = 1;\n      this.getList();\n    },\n    handleModifyStatus: function handleModifyStatus(row, status) {\n      this.$message({\n        message: '操作Success',\n        type: 'success'\n      });\n      row.status = status;\n    },\n    sortChange: function sortChange(data) {\n      var prop = data.prop,\n          order = data.order;\n\n      if (prop === 'id') {\n        this.sortByID(order);\n      }\n    },\n    sortByID: function sortByID(order) {\n      if (order === 'ascending') {\n        this.listQuery.sort = '+id';\n      } else {\n        this.listQuery.sort = '-id';\n      }\n\n      this.handleFilter();\n    },\n    resetTemp: function resetTemp() {\n      this.temp = {\n        id: undefined,\n        importance: 1,\n        remark: '',\n        timestamp: new Date(),\n        title: '',\n        status: 'published',\n        type: ''\n      };\n    },\n    handleCreate: function handleCreate() {\n      var _this2 = this;\n\n      this.resetTemp();\n      this.dialogStatus = 'create';\n      this.dialogFormVisible = true;\n      this.$nextTick(function () {\n        _this2.$refs['dataForm'].clearValidate();\n      });\n    },\n    createData: function createData() {\n      var _this3 = this;\n\n      this.$refs['dataForm'].validate(function (valid) {\n        if (valid) {\n          _this3.temp.id = parseInt(Math.random() * 100) + 1024; // mock a id\n\n          _this3.temp.author = 'vue-element-admin';\n          (0, _article.createArticle)(_this3.temp).then(function () {\n            _this3.list.unshift(_this3.temp);\n\n            _this3.dialogFormVisible = false;\n\n            _this3.$notify({\n              title: 'Success',\n              message: 'Created Successfully',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        }\n      });\n    },\n    handleUpdate: function handleUpdate(row) {\n      var _this4 = this;\n\n      this.temp = Object.assign({}, row); // copy obj\n\n      this.temp.timestamp = new Date(this.temp.timestamp);\n      this.dialogStatus = 'update';\n      this.dialogFormVisible = true;\n      this.$nextTick(function () {\n        _this4.$refs['dataForm'].clearValidate();\n      });\n    },\n    updateData: function updateData() {\n      var _this5 = this;\n\n      this.$refs['dataForm'].validate(function (valid) {\n        if (valid) {\n          var tempData = Object.assign({}, _this5.temp);\n          tempData.timestamp = +new Date(tempData.timestamp); // change Thu Nov 30 2017 16:41:05 GMT+0800 (CST) to 1512031311464\n\n          (0, _article.updateArticle)(tempData).then(function () {\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n              for (var _iterator = _this5.list[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var v = _step.value;\n\n                if (v.id === _this5.temp.id) {\n                  var index = _this5.list.indexOf(v);\n\n                  _this5.list.splice(index, 1, _this5.temp);\n\n                  break;\n                }\n              }\n            } catch (err) {\n              _didIteratorError = true;\n              _iteratorError = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                  _iterator.return();\n                }\n              } finally {\n                if (_didIteratorError) {\n                  throw _iteratorError;\n                }\n              }\n            }\n\n            _this5.dialogFormVisible = false;\n\n            _this5.$notify({\n              title: 'Success',\n              message: 'Update Successfully',\n              type: 'success',\n              duration: 2000\n            });\n          });\n        }\n      });\n    },\n    handleDelete: function handleDelete(row) {\n      this.$notify({\n        title: 'Success',\n        message: 'Delete Successfully',\n        type: 'success',\n        duration: 2000\n      });\n      var index = this.list.indexOf(row);\n      this.list.splice(index, 1);\n    },\n    handleFetchPv: function handleFetchPv(pv) {\n      var _this6 = this;\n\n      (0, _article.fetchPv)(pv).then(function (response) {\n        _this6.pvData = response.data.pvData;\n        _this6.dialogPvVisible = true;\n      });\n    },\n    handleDownload: function handleDownload() {\n      var _this7 = this;\n\n      this.downloadLoading = true;\n      Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/vendor/Export2Excel'));\n      }).then(function (excel) {\n        var tHeader = ['timestamp', 'title', 'type', 'importance', 'status'];\n        var filterVal = ['timestamp', 'title', 'type', 'importance', 'status'];\n\n        var data = _this7.formatJson(filterVal, _this7.list);\n\n        excel.export_json_to_excel({\n          header: tHeader,\n          data: data,\n          filename: 'table-list'\n        });\n        _this7.downloadLoading = false;\n      });\n    },\n    formatJson: function formatJson(filterVal, jsonData) {\n      return jsonData.map(function (v) {\n        return filterVal.map(function (j) {\n          if (j === 'timestamp') {\n            return (0, _utils.parseTime)(v[j]);\n          } else {\n            return v[j];\n          }\n        });\n      });\n    },\n    getSortClass: function getSortClass(key) {\n      var sort = this.listQuery.sort;\n      return sort === \"+\".concat(key) ? 'ascending' : sort === \"-\".concat(key) ? 'descending' : '';\n    }\n  }\n};\nexports.default = _default;",null]}