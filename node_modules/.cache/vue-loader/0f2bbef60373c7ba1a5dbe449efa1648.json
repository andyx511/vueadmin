{"remainingRequest":"E:\\VUE\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\VUE\\vue-element-admin\\src\\components\\DndList\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\VUE\\vue-element-admin\\src\\components\\DndList\\index.vue","mtime":1566914132146},{"path":"E:\\VUE\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\VUE\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\VUE\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\VUE\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport draggable from 'vuedraggable'\r\n\r\nexport default {\r\n  name: 'DndList',\r\n  components: { draggable },\r\n  props: {\r\n    list1: {\r\n      type: Array,\r\n      default() {\r\n        return []\r\n      }\r\n    },\r\n    list2: {\r\n      type: Array,\r\n      default() {\r\n        return []\r\n      }\r\n    },\r\n    list1Title: {\r\n      type: String,\r\n      default: 'list1'\r\n    },\r\n    list2Title: {\r\n      type: String,\r\n      default: 'list2'\r\n    },\r\n    width1: {\r\n      type: String,\r\n      default: '48%'\r\n    },\r\n    width2: {\r\n      type: String,\r\n      default: '48%'\r\n    }\r\n  },\r\n  methods: {\r\n    isNotInList1(v) {\r\n      return this.list1.every(k => v.id !== k.id)\r\n    },\r\n    isNotInList2(v) {\r\n      return this.list2.every(k => v.id !== k.id)\r\n    },\r\n    deleteEle(ele) {\r\n      for (const item of this.list1) {\r\n        if (item.id === ele.id) {\r\n          const index = this.list1.indexOf(item)\r\n          this.list1.splice(index, 1)\r\n          break\r\n        }\r\n      }\r\n      if (this.isNotInList2(ele)) {\r\n        this.list2.unshift(ele)\r\n      }\r\n    },\r\n    pushEle(ele) {\r\n      for (const item of this.list2) {\r\n        if (item.id === ele.id) {\r\n          const index = this.list2.indexOf(item)\r\n          this.list2.splice(index, 1)\r\n          break\r\n        }\r\n      }\r\n      if (this.isNotInList1(ele)) {\r\n        this.list1.push(ele)\r\n      }\r\n    },\r\n    setData(dataTransfer) {\r\n      // to avoid Firefox bug\r\n      // Detail see : https://github.com/RubaXa/Sortable/issues/1012\r\n      dataTransfer.setData('Text', '')\r\n    }\r\n  }\r\n}\r\n",null]}