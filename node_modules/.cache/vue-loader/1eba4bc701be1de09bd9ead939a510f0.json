{"remainingRequest":"E:\\VUE\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\VUE\\vue-element-admin\\src\\components\\BackToTop\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\VUE\\vue-element-admin\\src\\components\\BackToTop\\index.vue","mtime":1566914132136},{"path":"E:\\VUE\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\VUE\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\VUE\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\VUE\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  name: 'BackToTop',\r\n  props: {\r\n    visibilityHeight: {\r\n      type: Number,\r\n      default: 400\r\n    },\r\n    backPosition: {\r\n      type: Number,\r\n      default: 0\r\n    },\r\n    customStyle: {\r\n      type: Object,\r\n      default: function() {\r\n        return {\r\n          right: '50px',\r\n          bottom: '50px',\r\n          width: '40px',\r\n          height: '40px',\r\n          'border-radius': '4px',\r\n          'line-height': '45px',\r\n          background: '#e7eaf1'\r\n        }\r\n      }\r\n    },\r\n    transitionName: {\r\n      type: String,\r\n      default: 'fade'\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      visible: false,\r\n      interval: null,\r\n      isMoving: false\r\n    }\r\n  },\r\n  mounted() {\r\n    window.addEventListener('scroll', this.handleScroll)\r\n  },\r\n  beforeDestroy() {\r\n    window.removeEventListener('scroll', this.handleScroll)\r\n    if (this.interval) {\r\n      clearInterval(this.interval)\r\n    }\r\n  },\r\n  methods: {\r\n    handleScroll() {\r\n      this.visible = window.pageYOffset > this.visibilityHeight\r\n    },\r\n    backToTop() {\r\n      if (this.isMoving) return\r\n      const start = window.pageYOffset\r\n      let i = 0\r\n      this.isMoving = true\r\n      this.interval = setInterval(() => {\r\n        const next = Math.floor(this.easeInOutQuad(10 * i, start, -start, 500))\r\n        if (next <= this.backPosition) {\r\n          window.scrollTo(0, this.backPosition)\r\n          clearInterval(this.interval)\r\n          this.isMoving = false\r\n        } else {\r\n          window.scrollTo(0, next)\r\n        }\r\n        i++\r\n      }, 16.7)\r\n    },\r\n    easeInOutQuad(t, b, c, d) {\r\n      if ((t /= d / 2) < 1) return c / 2 * t * t + b\r\n      return -c / 2 * (--t * (t - 2) - 1) + b\r\n    }\r\n  }\r\n}\r\n",null]}